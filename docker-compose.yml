version: "3.9"

services:
  web1:
    build: .
    container_name: khaosatdichvu-1
    ports:
      - "8001:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - THREADS=8
      - CONN_LIMIT=100
      - FLASK_CONFIG=ProductionConfig
      - FORCE_HTTPS=false
      - CORS_ORIGINS=*
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  web2:
    build: .
    container_name: khaosatdichvu-2
    ports:
      - "8002:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - THREADS=8
      - CONN_LIMIT=100
      - FLASK_CONFIG=ProductionConfig
      - FORCE_HTTPS=false
      - CORS_ORIGINS=*
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "-S", "curl", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: khaosat-redis
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

volumes:
  redis-data:
